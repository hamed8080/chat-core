{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ChatCore\/documentation\/ChatCore"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ChatCore\/documentation\/ChatCore\/MessageTypeProtocol"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8ChatCore19MessageTypeProtocolP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "MessageTypeProtocol"
      }
    ],
    "modules" : [
      {
        "name" : "ChatCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "MessageTypeProtocol"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "MessageTypeProtocol"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "MessageTypeProtocol"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/ChatCore\/documentation\/ChatCore\/MessageTypeProtocol\/messageType"
      ],
      "title" : "Instance Properties"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/chatcore\/messagetypeprotocol"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ChatCore/documentation/ChatCore": {
  "abstract" : [
    {
      "text" : "ChatCore consist of base classes and enums as well as protocols.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ChatCore\/documentation\/ChatCore",
  "images" : [
    {
      "identifier" : "icon.png",
      "type" : "icon"
    }
  ],
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ChatCore",
  "type" : "topic",
  "url" : "\/documentation\/chatcore"
},
"doc://ChatCore/documentation/ChatCore/MessageTypeProtocol": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageTypeProtocol"
    }
  ],
  "identifier" : "doc:\/\/ChatCore\/documentation\/ChatCore\/MessageTypeProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageTypeProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "MessageTypeProtocol",
  "type" : "topic",
  "url" : "\/documentation\/chatcore\/messagetypeprotocol"
},
"doc://ChatCore/documentation/ChatCore/MessageTypeProtocol/messageType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "messageType"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8ChatCore11MessageTypeO",
      "text" : "MessageType"
    }
  ],
  "identifier" : "doc:\/\/ChatCore\/documentation\/ChatCore\/MessageTypeProtocol\/messageType",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "messageType",
  "type" : "topic",
  "url" : "\/documentation\/chatcore\/messagetypeprotocol\/messagetype"
},
"icon.png": {
  "alt" : "App icon.",
  "identifier" : "icon.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/icon.png"
    }
  ]
}
}
}